<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="10" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Loan Department" duration-ms="102" started-at="2022-09-13T18:07:09Z" finished-at="2022-09-13T18:07:09Z">
    <groups>
      <group name="Smoke">
        <method signature="day2.ploan3()[pri:0, instance:testNGTutorial.day2@16aa0a0a]" name="ploan3" class="testNGTutorial.day2"/>
        <method signature="day4.APILoginHomeLoan(java.lang.String, java.lang.String)[pri:0, instance:testNGTutorial.day4@1a84f40f]" name="APILoginHomeLoan" class="testNGTutorial.day4"/>
        <method signature="day3.WebLoginCarLoan()[pri:0, instance:testNGTutorial.day3@5db45159]" name="WebLoginCarLoan" class="testNGTutorial.day3"/>
      </group> <!-- Smoke -->
    </groups>
    <test name="Car loan" duration-ms="88" started-at="2022-09-13T18:07:09Z" finished-at="2022-09-13T18:07:09Z">
      <class name="testNGTutorial.day2">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testNGTutorial.day2@16aa0a0a]" name="beforeSuite" is-config="true" duration-ms="11" started-at="2022-09-13T23:37:09Z" finished-at="2022-09-13T23:37:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
      </class> <!-- testNGTutorial.day2 -->
      <class name="testNGTutorial.day3">
        <test-method status="PASS" signature="APILoginCarLoan(java.lang.String, java.lang.String)[pri:0, instance:testNGTutorial.day3@5db45159]" name="APILoginCarLoan" duration-ms="9" started-at="2022-09-13T23:37:09Z" finished-at="2022-09-13T23:37:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[carLoan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ABC000987]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILoginCarLoan -->
        <test-method status="PASS" signature="WebLoginCarLoan()[pri:0, instance:testNGTutorial.day3@5db45159]" name="WebLoginCarLoan" duration-ms="3" started-at="2022-09-13T23:37:09Z" finished-at="2022-09-13T23:37:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginCarLoan -->
        <test-method status="PASS" signature="padLoginCarLoan(java.lang.String, java.lang.String)[pri:0, instance:testNGTutorial.day3@5db45159]" name="padLoginCarLoan" duration-ms="11" started-at="2022-09-13T23:37:09Z" data-provider="getData" finished-at="2022-09-13T23:37:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstUserName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstUserPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- padLoginCarLoan -->
        <test-method status="PASS" signature="padLoginCarLoan(java.lang.String, java.lang.String)[pri:0, instance:testNGTutorial.day3@5db45159]" name="padLoginCarLoan" duration-ms="6" started-at="2022-09-13T23:37:09Z" data-provider="getData" finished-at="2022-09-13T23:37:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondUserName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondUserPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- padLoginCarLoan -->
        <test-method status="PASS" signature="padLoginCarLoan(java.lang.String, java.lang.String)[pri:0, instance:testNGTutorial.day3@5db45159]" name="padLoginCarLoan" duration-ms="3" started-at="2022-09-13T23:37:09Z" data-provider="getData" finished-at="2022-09-13T23:37:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdUserName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdUserPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- padLoginCarLoan -->
      </class> <!-- testNGTutorial.day3 -->
      <class name="testNGTutorial.day4">
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:testNGTutorial.day4@1a84f40f]" name="afterSuite" is-config="true" duration-ms="0" started-at="2022-09-13T23:37:09Z" finished-at="2022-09-13T23:37:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testNGTutorial.day4 -->
    </test> <!-- Car loan -->
    <test name="Personal Loan" duration-ms="102" started-at="2022-09-13T18:07:09Z" finished-at="2022-09-13T18:07:09Z">
      <class name="testNGTutorial.day1">
        <test-method status="FAIL" signature="demo()[pri:0, instance:testNGTutorial.day1@48524010]" name="demo" duration-ms="11" started-at="2022-09-13T23:37:09Z" finished-at="2022-09-13T23:37:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:89)
	at org.testng.Assert.failNotEquals(Assert.java:489)
	at org.testng.Assert.assertTrue(Assert.java:37)
	at org.testng.Assert.assertTrue(Assert.java:47)
	at testNGTutorial.day1.demo(day1.java:11)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:715)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:907)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1237)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:37)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method status="PASS" signature="demo2()[pri:0, instance:testNGTutorial.day1@48524010]" name="demo2" duration-ms="1" started-at="2022-09-13T23:37:09Z" finished-at="2022-09-13T23:37:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo2 -->
      </class> <!-- testNGTutorial.day1 -->
      <class name="testNGTutorial.day2">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testNGTutorial.day2@16aa0a0a]" name="beforeTest" is-config="true" duration-ms="2" started-at="2022-09-13T23:37:09Z" finished-at="2022-09-13T23:37:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testNGTutorial.day2@16aa0a0a]" name="beforeClass" is-config="true" duration-ms="0" started-at="2022-09-13T23:37:09Z" finished-at="2022-09-13T23:37:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testNGTutorial.day2@16aa0a0a]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2022-09-13T23:37:09Z" finished-at="2022-09-13T23:37:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ploan2()[pri:0, instance:testNGTutorial.day2@16aa0a0a]" name="ploan2" duration-ms="15" started-at="2022-09-13T23:37:09Z" finished-at="2022-09-13T23:37:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testNGTutorial.day2@16aa0a0a]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-09-13T23:37:09Z" finished-at="2022-09-13T23:37:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testNGTutorial.day2@16aa0a0a]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2022-09-13T23:37:09Z" finished-at="2022-09-13T23:37:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ploan3()[pri:0, instance:testNGTutorial.day2@16aa0a0a]" name="ploan3" duration-ms="9" started-at="2022-09-13T23:37:09Z" finished-at="2022-09-13T23:37:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan3 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testNGTutorial.day2@16aa0a0a]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-09-13T23:37:09Z" finished-at="2022-09-13T23:37:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testNGTutorial.day2@16aa0a0a]" name="afterClass" is-config="true" duration-ms="1" started-at="2022-09-13T23:37:09Z" finished-at="2022-09-13T23:37:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testNGTutorial.day2@16aa0a0a]" name="afterTest" is-config="true" duration-ms="1" started-at="2022-09-13T23:37:09Z" finished-at="2022-09-13T23:37:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testNGTutorial.day2 -->
      <class name="testNGTutorial.day4">
        <test-method status="PASS" signature="APILoginHomeLoan(java.lang.String, java.lang.String)[pri:0, instance:testNGTutorial.day4@1a84f40f]" name="APILoginHomeLoan" duration-ms="2" started-at="2022-09-13T23:37:09Z" finished-at="2022-09-13T23:37:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalLoan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILoginHomeLoan -->
      </class> <!-- testNGTutorial.day4 -->
    </test> <!-- Personal Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
